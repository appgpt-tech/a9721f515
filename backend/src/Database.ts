// Source code generated by AppGPT (www.appgpt.tech)

 //Class to create tables and seed new database
import { DataSource } from "typeorm";
import { DBConfiguration } from "./Configuration";
import { SettingsEntity } from "./db/Settings.entity";
//autogenerate imports based on resources
import { booksEntity } from "./db/books.entity";
import { authorsEntity } from "./db/authors.entity";
import { membersEntity } from "./db/members.entity";
import { loansEntity } from "./db/loans.entity";

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [SettingsEntity, booksEntity, authorsEntity, membersEntity, loansEntity];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables


    await Database.Seed();
  }
  static async Seed() {
    let data: any = {"books":[{"title":"title 1","author":1,"isbn":"isbn 1","genre":"genre 1","id":46},{"title":"title 2","author":2,"isbn":"isbn 2","genre":"genre 2","id":25},{"title":"title 3","author":3,"isbn":"isbn 3","genre":"genre 3","id":71},{"title":"title 4","author":4,"isbn":"isbn 4","genre":"genre 4","id":84},{"title":"title 5","author":5,"isbn":"isbn 5","genre":"genre 5","id":50}],"authors":[{"name":"name 1","dateOfBirth":"2024-12-14T14:13:23.421Z","id":80},{"name":"name 2","dateOfBirth":"2023-06-06T22:01:27.915Z","id":4},{"name":"name 3","dateOfBirth":"2024-12-29T01:22:07.786Z","id":18},{"name":"name 4","dateOfBirth":"2023-07-09T20:22:09.572Z","id":9},{"name":"name 5","dateOfBirth":"2024-01-26T22:26:04.025Z","id":50}],"members":[{"name":"name 1","gender":"gender 1","address":"address 1","id":67},{"name":"name 2","gender":"gender 2","address":"address 2","id":66},{"name":"name 3","gender":"gender 3","address":"address 3","id":4},{"name":"name 4","gender":"gender 4","address":"address 4","id":25},{"name":"name 5","gender":"gender 5","address":"address 5","id":31}],"loans":[{"loanId":"loanId 1","memberId":1,"issueDate":"2023-11-28T06:46:18.312Z","dueDate":"2023-04-12T05:17:05.464Z","id":57},{"loanId":"loanId 2","memberId":2,"issueDate":"2024-07-14T04:16:43.910Z","dueDate":"2024-07-23T19:11:31.079Z","id":47},{"loanId":"loanId 3","memberId":3,"issueDate":"2023-10-05T15:22:12.722Z","dueDate":"2024-03-02T05:36:01.367Z","id":79},{"loanId":"loanId 4","memberId":4,"issueDate":"2024-11-26T05:56:04.929Z","dueDate":"2024-10-07T15:09:11.629Z","id":9},{"loanId":"loanId 5","memberId":5,"issueDate":"2023-09-11T17:24:57.359Z","dueDate":"2023-06-18T08:21:25.828Z","id":99}]};
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true){
      console.log('   Seeding database...');
      await this.SeedResource("booksEntity", data.books);
await this.SeedResource("authorsEntity", data.authors);
await this.SeedResource("membersEntity", data.members);
await this.SeedResource("loansEntity", data.loans); 
      await this.SeedResource("SettingsEntity", {
        settingname: "isSeeded",
        settingvalue: "true",
      });
    }else{
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository("SettingsEntity");
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: "isSeeded",
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table '+resourceName);
    await repo.upsert(resourceData, ["id"]);
  }
}

